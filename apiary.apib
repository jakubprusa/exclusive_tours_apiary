FORMAT: 1A
HOST: https://concierge.exclusivetours.cz/api/v1

# Concierge ET - API Documentation

Concierge ET is based on REST principles, all you need to use it is your Concierge ET account.
You have to be authenticated and call the simple HTTPs request on the URL specified below.
The following documentation covers core resources that are used to manipulate with the main
entities. First of all, read basic instructions to start using the API.

To be able to access API at all you have to have valid application token and send it as a part of HTTP header

 * Send a HTTP header `App-Token: {app_token}`, where `{app_token}` is your Application token
 
For calling endpoints valid user authentication token has to be provided. This token can be retreived using  signin endpoint.

Allowed HTTPs requests:

 * `POST` - To create resource
 * `PATCH` - To update resource
 * `GET` - Get a resource or list of resources
 * `DELETE` - To delete resource



# Group Registration/Login
# Registration [/signup]
## Register [POST]

+ Returns created user id and access token if registration succeeds

+ Request (application/json)

        {
            "first_name": "Roman",
            "last_name": "Vomacka",
            "email": "vomacka@gmail.com",
            "password": "supersecretpassword"
        }
        
+ Response 200 (application/json)

        {
            "token": "valid_access_token",
            "user_id": 1
        }

+ Response 422 (application/json)

        {
            "message": "unprocessable entity: same email already registered"
        }

# Sign in [/signin]
## Sign in [POST]

+ Returns user id and access token if authentication succeeds

+ Request (application/json)

        {
            "email": "vomacka@gmail.com",
            "password": "supersecretpassword"
        }
        
+ Response 200 (application/json)

        {
            "token": "valid_user_access_token",
            "user_id": 1
        }

+ Response 403 (application/json)

        {
            "message": "not authorized: incorrect email/password combination"
        }

# Group Users
# Users [/user]

The following is a section of resources related to the user.

## Retreive user [GET]

+ Response 200 (application/json)

        {
            "id": 1,
            "name": "Alexey Vasiliev",
            "email": "alexey.vasiliev@railsware.com",
            "api_token": "{api_token}",
            "gravatar_icon": "http://www.gravatar.com/avatar/2b18d4346ca1ec18cb310cd86a51a4e2?s=100",
            "gravatar_little_icon": "http://www.gravatar.com/avatar/2b18d4346ca1ec18cb310cd86a51a4e2?s=30",
            "created_at_int": 1355064377,
            "timezone": "Europe/Kiev",
            "timezone_in_int": 7200
        }

# Profile [/user/profile]

Will contain quite some information
+ Saved Persons that can be added to the flight/hotel reservation
+ Users preferences - preferred class, preferred carrier ......
+ Passport, Identification
+ GP Web Pay credit card token


## Retreive Profile [GET]

+ Response 200

## Update Profile [PATCH]

+ Response 200


# Group Flight
# Flight search [/flight/search]

## Search [GET]

Returns set of search results

+ Request (application/json)

        {
            "search-payload": "to be specified more granularly"
        }
        


+ Response 200 (application/json)

        {
            "results" : [],
        }